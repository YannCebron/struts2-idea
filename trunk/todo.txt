Features
========

Facet:
- FileSetEditor: show path only starting from project root
- Facet: rounded corners in FeaturesConfigurationTab
- Facet: integrate standard plugins in library dependencies/features tab
+ autodetection via existing struts.xml
- new project wizard (framework support)
+ StrutsVersionDetector: use pom.properties

IDE:
+ "Go To Action/Package"
= Icons

struts.xml:
= add webwork-DTD URIs --> no completion?!
+ <action> "method" does not only resolve to methods with "throws Exception"
- <action> "class": Spring integration
  warn if bean is not defined as prototype
+ <interceptor-ref> can resolve to <interceptor> not only -stack!
= Include#getFile: Converter
  support relative paths in subdirs
+ InterceptorRef#getName: Resolve Scope
- warn about deprecated result-types, interceptors ("xx-yy")
= <action> method: wildcards -- hacky fix suppresing resolving when encountering "{"
- <param> name resolving .. tricky!
  done: action, action w/o class
        result
        default-action-ref
        field-validator
        validator
        default-class-ref
  left: exception-mapping
        result w/o type
        interceptor-ref for nested property (validatorName.property)
        default-interceptor-ref ("")
- <param>: field-type aware (string, number, classname)
+ <param> "name" quickfix for non-existing property
+ Bean#scope 
- Bean#name must be unique within same object "type" elements (dedicated inspection?)
- Bean#name only required if static=false (dedicated inspection?)
- restrict resolving to result location depending on result-type (e.g. Velocity)
= Structure View
  default-action-ref: icon
  default-class-ref: icon
- StrutsPackageExtendsResolveConverterImpl: add quickfix to open module configuration to fix file sets
+ ExceptionMapping: "result" (local/global?) TODO "name" ??

validation.xml:
+ improve resolving speed for default.xml in xwork.jar
- show XX-validation.xml(s) underneath Class-node in project view
- provide gutter-navigation from Action-method to corresponding validation.xml
- create validation.xml for Action-method
= Structure View

JSPs:
+ Navigate to Action-declaration/class
- Autocompletion/navigation for value-stack/Action-class properties
= Autocompletion/navigation for all suitable attributes
= JavaScript support for suitable tags
= CSS support

JAVA:
+ Navigation to Action-declaration in struts.xml
- CreateActionMethodQuickfix: use template
- Highlight unused Actions, Quickfixes: Delete, Map in struts.xml
- Autocompletion/navigation to result-declaration in struts.xml

web.xml:
- Filter: <init-param> -> constants
